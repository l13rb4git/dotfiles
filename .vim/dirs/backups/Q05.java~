// Fabio02Condicionais; Fabio06AngulosTipoTriangulos
// Leia 3 (três) números (cada número corresponde a um ângulo interno do triângulo), verifique e escreva
// se os 3 (três) números formam um triângulo (a soma dos ângulos internos é igual a 180o). Se formam,
// verifique se formam um triângulo acutângulo (3 ângulos < 90o), retângulo (1 ângulo = 90o) ou
// obtusângulo (1 ângulo > 90o). Não existe ângulo com tamanho 0o (zero grau).

import java.util.Scanner;

public class Q05 {
    public static void main(String[] args) {

        showInfoProgram();

        int primeiroAngulo = getInteiroOrdenado("primeiro");
        int segundoAngulo = getInteiroOrdenado("segundo");
        int terceiroAngulo = getInteiroOrdenado("terceiro");

        mostrarTipoTriangulo(primeiroAngulo, segundoAngulo, terceiroAngulo);
    }

    private static int getInteiroOrdenado(String posicao){
        Scanner sc = new Scanner(System.in);
        System.out.printf("Digite o %s ângulo: ", posicao);
        return sc.nextInt();
    }

    private static void showInfoProgram() {
        System.out.println("Informe 3 número correspondentes a os ângulos internos de um triângulo, " +
                "será mostrado qual o tipo dele.");
    }

    private static void mostrarTipoTriangulo(int primeiroAngulo, int segundoAngulo, int terceiroAngulo){
        if (trianguloValido(primeiroAngulo, segundoAngulo, terceiroAngulo)){
            String tipoTrinagulo = getTipoTriangulo(primeiroAngulo, segundoAngulo, terceiroAngulo);
            System.out.printf("Os ângulos fornecidos formam um triângulo %d.", tipoTrinagulo);

        }else{
            System.out.println("Erro: Triângulo inválido.");
        }
    }

    private static boolean trianguloValido(int primeiroAngulo, int segundoAngulo, int terceiroAngulo){
        return (primeiroAngulo + segundoAngulo + terceiroAngulo) == 180;
    }

    private static String getTipoTriangulo(int primeiroAngulo, int segundoAngulo, int terceiroAngulo){
        if (eh_acutangulo(primeiroAngulo, segundoAngulo, terceiroAngulo)){
            return "acutângulo";

        }else if (eh_obtusangulo(primeiroAngulo, segundoAngulo, terceiroAngulo)){
            return "obtusângulo";

        }
        return "retângulo";
    }

    private static boolean eh_acutangulo(int primeiroAngulo, int segundoAngulo, int terceiroAngulo){
        return (primeiroAngulo < 90) && (segundoAngulo < 90) && (terceiroAngulo < 90);
    }

    private static boolean eh_obtusangulo(int primeiroAngulo, int segundoAngulo, int terceiroAngulo){
        return (primeiroAngulo > 90) || (segundoAngulo > 90) || (terceiroAngulo > 90);
    }
}