from list_tools import *
import os

def array(linhas, colunas, preenchimento = 0):
	array = cria_vetor(linhas, preenchimento)
	for i in range(len(array)):
		array[i] = cria_vetor(colunas, preenchimento)
	return array


def matriz_input():
	linhas = get_inteiro_minimo("Quantidade de linhas da matriz: ", 1)
	colunas = get_inteiro_minimo("Quantidade de colunas da matriz: ", 1)
	matriz_in = array(linhas, colunas, "-")
	for i in range(len(matriz_in)):
		for j in range(len(matriz_in[i])):
			matriz_in[i][j] = '_'
			os.system("clear")
			show_matriz(matriz_in)
			matriz_in[i][j] = get_inteiro("-> ")
	os.system("clear")
	show_matriz(matriz_in)
	return matriz_in




def matriz_quadrada(linhas = 1, colunas = 1):
	while linhas < 1 or colunas < 1 or linhas != colunas:
		print("ERRO: Tamanho incompativel com uma matriz quadrada.", \
				" \nPor favor digite novamente as dimensoes da matriz.")
		linhas = get_inteiro_minimo("Linhas >> ", 2)
		colunas = get_inteiro_minimo("Colunas >> ", 2)

	return array(linhas, colunas)


def cp_array(array_c, array_p, inicio_linha=0, inicio_coluna=0):
    length_ruler = menor(len(array_p),len(array_c)) 

    len_coluns_ruler = menor(len(array_c[0]), len(array_p[0])) 

    for i in range(inicio_linha,length_ruler):
        for j in range(inicio_coluna,len_coluns_ruler):
            array_p[i][j] = array_c[i][j]

    return array_p


def show_matriz(matriz):
	for i in range(len(matriz)):
		print("| ", end = "")
		for j in range(len(matriz[i])):
			print(matriz[i][j], end = " ")
		print("|")

print(cp_array([[1,2,3],[3,2,1],[2,1,3]], [[0,0,0],[0,0,0]]))
