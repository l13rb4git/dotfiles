direct from the buffer,v
r 5<CTRL-F>,v
your,v
",V
e,v
        cabbrev vrc e ~/.vimrc,V
:,v
fd AnyFoldActivate ,v
,V
        cabbrev fd AnyFoldActivate ,V
ain,v
    pass,V
def mostrar_info_programa():    """Mostra ao usuário informações sobre o funcionamento do programa. """,V
    ,V
l,v
$2 ,v
snippet doc "Open a doc string""""$1$2"""endsnippet,V
""",V
",v
f,v
 ,v
descontado (é a empresa que deposita). O salário líquido corresponde ao salário bruto menos os descontos. O programa deverá pedir ao usuário o valor ,V
o Salário Bruto acima de R$ 2.500,00 - desconto de 20%,V
: R$ 165,00,v
: R$ 121,00,v
: R$ 110,00,v
: R$ 55,00,v
: R$ 1100,00,v
    informacoes_aumento = organizar_string(salario, porcentagem_aumento,                                           valor_aumento, salario_reajustado),V
def organizar_string(salario, porcentagem_aumento, valor_aumento,                     salario_reajustado):    return f"O salário antes do reajuste: R${salario}\n\        O percentual de aumento aplicado: {porcentagem_aumento * 100}%\n\        O valor do aumento: R${valor_aumento}\n\        O novo salário, após o aumento: R${salario_reajustado}",V
\,v
                    ),v
    ,V
f"O salário antes do reajuste: R${salario}\n\    O percentual de aumento aplicado: {porcentagem_aumento * 100}%\n\    O valor do aumento: R${valor_aumento}\n\    O novo salário, após o aumento: R${salario_reajustado}",69
return ,v
informacoes_aumento,v
    return f"O salário antes do reajuste: R${salario}\n\        O percentual de aumento aplicado: {porcentagem_aumento * 100}%\n\        O valor do aumento: R${valor_aumento}\n\        O novo salário, após o aumento: R${salario_reajustado}",V
R$,v
salario,v
.,v
;,v
· · · · ,2
· o salário antes do reajuste;· o percentual de aumento aplicado;· o valor do aumento;· o novo salário, após o aumento.,V
salario, porcentagem_aumento,                                           valor_aumento, salario_reajustado,v
S,v
salario,,v
nfor,v
i,v
infor,v
çõ,v
        · o salário antes do reajuste;        · o percentual de aumento aplicado;        · o valor do aumento;        · o novo salário, após o aumento.,V
1,v
5,v
        porcentagem_aumento = 0.15,V
=,v
    if salario >= 280: ,V
valido,v
,V
${dotfile},v
 cp -lf "${dir}" "${HOME}/${dotfile}",V
r,v
 cp -lrf "${dir}" "${HOME}/${dotfile}",V
ln -sf ,v
".gitconfig",v
rc,v
".vimrc" ,v
 "${dir}",v
https://github.com/l13rb4git/dotfiles.git,v
#!/bin/bashdotfiles=(".vimrc" ".zshrc" ".gitconfig")dir="${HOME}/Documents/dotfiles"for dotfile in "${dotfiles[@]}";do ln -sf "${HOME}/${dotfile}" "${dir}"done,v
and salario ,v
02b02 - Mensagem de informações do programa corrigida.,v
input("Digite M para matutino, V para vespertino e N para noite: "),v
 carácter referente a um turno,v
letra_turno,v
corespondente ao turno que você estuda,v
letra_valida,v
    letra_turno = get_letra_turno(),V
def main():    mostrar_info_programa()    letra_turno = get_letra_turno()    if letra_valida(letra_turno):        mostra_resultado(letra_turno)    else:        print("Valor Inválido!")def mostrar_info_programa():    """Mostra ao usuário informações sobre o funcionamento do programa. """    print("Informe uma corespondente ao turno que você estuda.")def get_letra_turno():    """Socilita ao usuário um carácter referente a um turno. """    return input("Digite M para matutino, V para vespertino e N para noite: ")if __name__ == '__main__':    main(),V
def letra_valida(letra):    return letra == 'V' or letra == 'M' or letra == 'N'def mostra_resultado(letra_sexo):    resultado = "Bom Dia!"    if letra_sexo == 'V':        resultado = "Boa Tarde!"    elif letra_sexo == 'N':        resultado = "Boa Noite!"    print(resultado),V
 número para saber se ele é positivo ou negativo,v
 um ,v
número para saber se ele é positivo ou negativo,v
"Sexo: %s" % ,v
Tarde,v
V,v
    if letra_sexo == 'V':        resultado = "Boa Tarde!",V
        resultado = "Boa Tarde!",V
Feminino,v
F,v
Masculino,v
M,v
 or letra == 'M',v
Sexo,v
sexo,v
M para Masculino e F para Feminino,v
def main():    mostrar_info_programa()    letra_sexo = get_letra_sexo()    if letra_valida(letra_sexo):        mostra_resultado(letra_sexo)    else:        print("Sexo inválido.")def mostrar_info_programa():    """Mostra ao usuário informações sobre o funcionamento do programa. """    print("Informe um número para saber se ele é positivo ou negativo.")def get_letra_sexo():    """Socilita ao usuário um carácter referente a um sexo. """    return input("Digite M para Masculino e F para Feminino: ")def letra_valida(letra):    return letra == 'F' or letra == 'M'def mostra_resultado(letra_sexo):    resultado = "Masculino"    if letra_sexo == 'F':        resultado = "Feminino"    print("Sexo: %s" % resultado)if __name__ == '__main__':    main(),V
    print(enesimo_produto, lista_baratos),V
        lista_baratos = adicionar_a_lista(lista_baratos, "segundo")    if terceiro_preco == menor_preco:,V
_baratos,v
primeiro_preco, segundo_preco, terceiro_preco,v
